{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/FloatingButton.js","pages/LoginPage.js","pages/AddDataPage.js","pages/DataTablePage.js","pages/Data.js","index.js"],"names":["AppMode","LOGIN","TABLE","ADD_DATA","EDIT_DATA","Object","freeze","NavBar","props","handleMenuBtnClick","mode","changeMode","toggleMenuOpen","getMenuBtnIcon","menuOpen","className","this","onClick","id","src","alt","height","width","title","React","Component","SideMenu","renderModeMenuItems","FEED","ROUNDS","COURSES","handleLogOut","console","log","fetch","then","res","setUser","user","profileImageUrl","username","showAbout","ModeBar","handleModeBtnClick","newMode","FloatingButton","handleClick","icon","LoginPage","handleOAuthLogin","provider","window","open","handleOAuthLoginClick","setState","setTimeout","handleLogin","data","JSON","parse","localStorage","getItem","userNameInputRef","current","value","rounds","roundCount","setItem","stringify","hasOwnProperty","loginBtnIcon","loginBtnLabel","setUserId","handleLoginSubmit","event","a","preventDefault","url","passwordInputRef","method","status","text","resText","loginMsg","hideErrorMsg","handleCreateAccount","createUsernameRef","accountInfo","password","createPasswordRef","securityQuestion","securityQuestionRef","securityAnswer","securityAnswerRef","headers","body","alert","returnToLogin","handleLookUpAccount","accountEmailRef","focus","json","resetEmail","resetQuestion","resetAnswer","showLookUpAccountDialog","showSecurityQuestionDialog","handleSecurityQuestionResponse","state","select","showPasswordResetDialog","handleResetPassword","resetPasswordRef","resetPasswordRepeatRef","resetInfo","showCreateAccount","createShow","loginShow","forgotPassword","createRef","githubIcon","githubLabel","onSubmit","placeholder","ref","required","type","pattern","AddDataPage","handleChange","name","target","seconds","length","handleSubmit","faIcon","btnLabel","roundData","saveRound","computeSGS","Number","strokes","minutes","today","Date","now","getTimezoneOffset","date","toISOString","substr","course","holes","notes","startData","onChange","size","maxLength","min","max","disabled","rows","cols","style","fontSize","DataTablePage","renderTable","table","r","push","key","editRound","confirmDelete","setEditId","deleteRound","keys","colSpan","fontStyle","DataPage","fetchRounds","deleteId","editId","addRound","newData","newRounds","concat","val","Fragment","modeTitle","modeToPage","App","handleChangeMode","Id","userId","openMenu","closeMenu","prevState","stopPropagation","userObj","setAuthenticated","auth","authenticated","toggleAbout","renderAbout","role","textAlign","href","addEventListener","response","obj","isAuthenticated","removeEventListener","ModePage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab52fdc9.chunk.js","sourcesContent":["const AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    TABLE: \"TableMode\",\r\n    ADD_DATA: \"AddDataMode\",\r\n    EDIT_DATA: \"EditDataMode\"\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nexport default class NavBar extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    handleMenuBtnClick = () => {\r\n        if (this.props.mode === AppMode.ADD_DATA || \r\n            this.props.mode === AppMode.EDIT_DATA) {\r\n            this.props.changeMode(AppMode.TABLE);\r\n        } else if (this.props.mode !== AppMode.LOGIN) {\r\n            this.props.toggleMenuOpen();\r\n        }\r\n    }\r\n\r\n    getMenuBtnIcon = () => {\r\n        if (this.props.mode === AppMode.ADD_DATA ||\r\n            this.props.mode === AppMode.EDIT_DATA)\r\n            return \"fa fa-arrow-left\";\r\n        if (this.props.menuOpen)\r\n            return \"fa fa-times\";\r\n        return \"fa fa-bars\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"navbar\" + (this.props.mode === AppMode.LOGIN ?\r\n                \" invisible\" : \" visible\")}>  \r\n                <span className=\"navbar-items\">\r\n                <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\r\n                    <span id=\"sidemenu-btn-icon\" \r\n                    className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\r\n                    </span>\r\n                </button>\r\n                <img src=\"http://tiny.cc/sslogo\" alt=\"Speed Score Logo\" height=\"38px\"\r\n                width=\"38px\" />\r\n                <span id=\"topBarTitle\" className=\"navbar-title\">\r\n                    &nbsp;{this.props.title}\r\n                </span>\r\n                </span>\r\n            </div>\r\n        ); \r\n    }\r\n}","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nexport default class SideMenu extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    renderModeMenuItems = () => {\r\n        switch (this.props.mode) {\r\n            case AppMode.FEED:\r\n                return(\r\n                <div>\r\n                    <a className=\"sidemenu-item\">\r\n                        <span className=\"fa fa-users\"></span>&nbsp;Followed Users\r\n                    </a>\r\n                    <a className=\"sidemenu-item\">\r\n                        <span className=\"fa fa-search\"></span>&nbsp;Search Feed\r\n                    </a>\r\n                </div>\r\n                );\r\n                break;\r\n            \r\n            case AppMode.ROUNDS:\r\n                return(\r\n                <div>\r\n                    <a className=\"sidemenu-item\">\r\n                        <span className=\"fa fa-plus\"></span>&nbsp;Log New Round\r\n                    </a>\r\n                    <a className=\"sidemenu-item\">\r\n                        <span className=\"fa fa-search\"></span>&nbsp;Search Rounds\r\n                    </a>\r\n                </div>\r\n                );\r\n            \r\n            break;\r\n            \r\n            case AppMode.COURSES:\r\n                return(\r\n                <div>\r\n                    <a className=\"sidemenu-item\">\r\n                        <span className=\"fa fa-plus\"></span>&nbsp;Add a Course\r\n                    </a>\r\n                    <a className=\"sidemenu-item\">\r\n                        <span className=\"fa fa-search\"></span>&nbsp;Search Courses\r\n                    </a>\r\n                </div>\r\n                );\r\n            \r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    handleLogOut = () => {\r\n        console.log('Hello');\r\n        \r\n        fetch('/auth/logout').then(res => {\r\n            this.props.setUser(\"\");\r\n            this.props.changeMode(AppMode.LOGIN);\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n        <div className= {\"sidemenu \" +\r\n            (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")} >\r\n            {/* SIDE MENU TITLE */}\r\n            {this.props.user ? (<div className=\"sidemenu-title\">\r\n                <img src={this.props.user.profileImageUrl} height='50' width='50' />\r\n                <span className=\"sidemenu-userID\">&nbsp;{this.props.user.username}</span>\r\n            </div>) : null}\r\n\r\n            {/* MENU CONTENT */}\r\n            {/*Mode-based menu items */}\r\n            {/* {this.renderModeMenuItems()} */}\r\n            <a className=\"sidemenu-item\" onClick={this.props.showAbout}>\r\n                <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\r\n\r\n            <a className=\"sidemenu-item\" onClick={this.handleLogOut}>\r\n                <span className=\"fa fa-sign-out\"></span>&nbsp;Log Out</a>\r\n        </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nexport default class ModeBar extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    handleModeBtnClick = (newMode) => {\r\n        if (this.props.mode != newMode) {\r\n            this.props.changeMode(newMode);\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div id =\"bottomBar\" className={\"modebar\" + (this.props.mode === AppMode.LOGIN ?\r\n                \" invisible\" : \" visible\")}>\r\n                <a className={\"modebar-btn\" + (this.props.mode === AppMode.TABLE ? \" modebar-item-selected\" : \"\")}\r\n                    onClick={this.props.menuOpen ? null :\r\n                        () => this.handleModeBtnClick(AppMode.TABLE)}>\r\n                    <span className=\"modebar-icon fa fa-th-list\"></span>\r\n                    <span className=\"modebar-text\">Data Table Mode</span>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class FloatingButton extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n          <div>\r\n            <a className=\"floatbtn\" onClick={(this.props.menuOpen ? null : \r\n               this.props.handleClick)}>\r\n              <span className={\"floatbtn-icon \" + this.props.icon}></span>\r\n            </a>\r\n          </div>  \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nexport default class LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.userNameInputRef = React.createRef();\r\n        this.passwordInputRef = React.createRef();\r\n\r\n        this.createUsernameRef = React.createRef();\r\n        this.createPasswordRef = React.createRef();\r\n        this.securityQuestionRef = React.createRef();\r\n        this.securityAnswerRef = React.createRef();\r\n\r\n        this.state = {  \r\n            loginBtnIcon: \"fa fa-sign-in\",\r\n            loginBtnLabel: \"Log In\",\r\n            githubIcon: \"fa fa-github\",\r\n            githubLabel: \"Login with Github\",\r\n            loginShow: true,\r\n            createShow: false\r\n        }\r\n    }\r\n\r\n    //handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n    //provider\r\n\r\n    handleOAuthLogin = (provider) => {\r\n        window.open(`/auth/${provider}`,\"_self\");\r\n    }\r\n        \r\n    //handleOAuthLoginClick -- Called whent the user clicks on button to\r\n    //authenticate via a third-party OAuth service. The name of the provider is\r\n    //passed in as a parameter.\r\n    handleOAuthLoginClick = (provider) => {\r\n        this.setState({[provider + \"Icon\"] : \"fa fa-spin fa-spinner\",\r\n        [provider + \"Label\"] : \"Connecting...\"});\r\n        setTimeout(() => this.handleOAuthLogin(provider),0);\r\n    }\r\n\r\n    handleLogin = () => {\r\n        //Stop spinner\r\n        let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\r\n        //Create fresh user data object for new user\r\n        if (data == null) {\r\n            data = {}; //create empty data object\r\n            data[this.userNameInputRef.current.value] = {\r\n                rounds: {}, \r\n                roundCount: 0\r\n            };\r\n            localStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\r\n        }\r\n        else if (!data.hasOwnProperty(this.userNameInputRef.current.value)) {\r\n            data[this.userNameInputRef.current.value] = {\r\n                rounds: {}, \r\n                roundCount: 0\r\n            };\r\n            localStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\r\n        }\r\n        \r\n        this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n                    loginBtnLabel: \"Log In\"});\r\n        //Set current user\r\n        \r\n        this.props.setUserId(this.userNameInputRef.current.value);\r\n        //Trigger switch to FEED mode (default app landing page)\r\n        this.props.changeMode(AppMode.TABLE);\r\n        console.log('LOGGED IN', AppMode.TABLE);\r\n    }\r\n\r\n    handleLoginSubmit = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n                        loginBtnLabel: \"Logging In...\"});\r\n\r\n        const url = \"auth/login?username=\" + this.userNameInputRef.current.value +\r\n            \"&password=\" + this.passwordInputRef.current.value;\r\n        const res = await fetch(url, {method: 'POST'});\r\n\r\n        if (res.status == 200) { //successful login!\r\n            window.open(\"/\",\"_self\");\r\n        } \r\n\r\n        else { //Unsuccessful login\r\n            const resText = await res.text();\r\n            this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n            loginBtnLabel: \"Log In\",\r\n            loginMsg: resText}, () => setTimeout(this.hideErrorMsg,3000));\r\n        }\r\n\r\n        //Initiate spinner for 1 second\r\n        setTimeout(this.handleLogin,1000);\r\n    }\r\n\r\n    handleCreateAccount = async (event) => {\r\n        event.preventDefault();\r\n        const url = '/users/' + this.createUsernameRef.current.value;\r\n        const accountInfo = {password: this.createPasswordRef.current.value,\r\n                           securityQuestion: this.securityQuestionRef.current.value,\r\n                           securityAnswer: this.securityAnswerRef.current.value};\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n            method: 'POST',\r\n            body: JSON.stringify(accountInfo)\r\n        }); \r\n        if (res.status == 200) {\r\n            alert(\"Your account has been succesfully created! Please enter your username and password again to login to your new account.\");\r\n            this.returnToLogin();\r\n        } \r\n        else {\r\n            //Grab textual error message\r\n            const resText = await res.text();\r\n            alert(resText); //most likely the username is already taken\r\n        }\r\n    }\r\n\r\n    handleLookUpAccount = async (event) => {\r\n        event.preventDefault();\r\n        let url = \"/users/\" + this.accountEmailRef.current.value;\r\n        let res = await fetch(url, {method: 'GET'});\r\n        let body;\r\n        if (res.status != 200) {\r\n            alert(\"Sorry, there is no account associated with that email address.\");\r\n            this.accountEmailRef.current.focus();\r\n            return;\r\n        }\r\n        \r\n        body = await res.json();\r\n        //if here, account exists -- user account info and push to state vars\r\n        this.setState({resetEmail: this.accountEmailRef.current.value,\r\n        resetQuestion: body.securityQuestion,\r\n        resetAnswer: body.securityAnswer,\r\n        showLookUpAccountDialog: false,\r\n        showSecurityQuestionDialog: true});\r\n        this.userNameInputRef.current.value = \"\"; //clear out field\r\n    }\r\n\r\n    handleSecurityQuestionResponse = async(event) => {\r\n        event.preventDefault();\r\n\r\n        if (this.securityAnswerRef.current.value != this.state.resetAnswer) {\r\n            alert(\"Sorry, that is not the correct answer to the security question.\");\r\n            this.securityAnswerRef.current.select();\r\n            return;\r\n        }\r\n\r\n        this.setState({showSecurityQuestionDialog: false,\r\n        showPasswordResetDialog: true});\r\n        this.securityAnswerRef.current.value = \"\"; //clear out field\r\n    }\r\n\r\n    handleResetPassword = async(event) => {\r\n        event.preventDefault();\r\n        \r\n        if (this.resetPasswordRef.current.value != this.resetPasswordRepeatRef.current.value) {\r\n            alert(\"Sorry, The passwords you entered do not match. Please try again.\");\r\n            this.resetPasswordRepeatRef.current.select();\r\n            return;\r\n        }\r\n        \r\n        const url = '/users/' + this.state.resetEmail;\r\n        const resetInfo = {password: this.resetPasswordRef.current.value};\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'PUT',\r\n            body: JSON.stringify(resetInfo)\r\n        });\r\n        \r\n        const text = await res.text();\r\n        alert(text);\r\n        this.resetPasswordRef.current.value = \"\";\r\n        this.resetPasswordRepeatRef.current.value = \"\";\r\n        this.setState({showPasswordResetDialog: false});\r\n    }\r\n\r\n    hideErrorMsg = () => {\r\n        this.userNameInputRef.current.value = \"\";\r\n        this.passwordInputRef.current.value = \"\";\r\n        this.setState({loginMsg: \"\"});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.userNameInputRef.current.focus();\r\n    }\r\n\r\n    showCreateAccount = () => {\r\n        this.setState({\r\n            createShow: true,\r\n            loginShow: false\r\n        });\r\n\r\n        this.createUsernameRef.current.value = this.userNameInputRef.current.value ? this.userNameInputRef.current.value : \"\";\r\n        this.createPasswordRef.current.value = \"\";\r\n        this.securityQuestionRef.current.value = \"\";\r\n        this.securityAnswerRef.current.value = \"\";\r\n    }\r\n\r\n    returnToLogin = () => {\r\n        this.userNameInputRef.current.value = \"\";\r\n        this.passwordInputRef.current.value = \"\";\r\n        this.setState({\r\n            createShow: false,\r\n            loginShow: true\r\n        });\r\n    }\r\n\r\n    forgotPassword = () => {\r\n        alert('Sorry! In the interest of time, this will remain unimplemented for now.');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div id=\"login-mode-div\" className=\"login-page\">\r\n                    <div className={\"login-form \" + (this.state.loginShow ? \"\" : \"create-state\")}>\r\n                        <img className=\"speedgolf-logo\" src=\"http://tiny.cc/sslogo\" />\r\n                        \r\n                        <h1 className=\"form-heading\">Welcome to SpeedScore</h1>\r\n                        <form id=\"loginInterface\" className=\"login-interface\" onSubmit={this.handleLoginSubmit}>\r\n                            <div className=\"input-text\">\r\n                                <input className=\"form-control\" placeholder=\"Enter Username\"\r\n                                    id=\"usernameInput\"\r\n                                    ref={this.userNameInputRef} required={true} />\r\n                            </div>\r\n                            <p />\r\n                            <div className=\"input-text\">\r\n                                <input className=\"form-control\" ref={this.passwordInputRef} type=\"password\" placeholder=\"Enter Password\" pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\" required={true} />\r\n                            </div>\r\n                            <span className=\"forgot-password\" onClick={this.forgotPassword}>Forgot Password?</span>\r\n                            <button type=\"submit\" className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n                                <span className={this.state.loginBtnIcon}/>\r\n                                    &nbsp;{this.state.loginBtnLabel}\r\n                            </button>\r\n                            <span className=\"clear-btn\" onClick={this.showCreateAccount}>Create Account</span>\r\n                            <button type=\"button\" className=\"btn btn-github\"\r\n                                onClick={() => this.handleOAuthLoginClick(\"github\")}>\r\n                                <span className={this.state.githubIcon}></span>&nbsp;\r\n                                {this.state.githubLabel}\r\n                            </button>\r\n                            <button type=\"button\" className=\"btn btn-facebook\"\r\n                                onClick={() => this.handleOAuthLoginClick(\"facebook\")}>\r\n                                <span className=\"fa fa-facebook\"></span>&nbsp;\r\n                                Login with Facebook\r\n                            </button>\r\n                            <p>\r\n                                <i>Version CptS 489 Sp20</i>\r\n                            </p>\r\n                            <p>\r\n                                <i>© 2020 Professor of Speedgolf. All rights reserved.</i>\r\n                            </p>\r\n                        </form>\r\n                    </div>\r\n                    <div className={\"login-form \" + (this.state.createShow ? \"\" : \"login-state\")}>\r\n                        <h1 className=\"form-heading\">Create an Account</h1>\r\n                        <form id=\"createInterface\" className=\"login-interface\" onSubmit={this.handleCreateAccount}>\r\n                            <div className=\"input-text\">\r\n                                <input className=\"form-control\" placeholder=\"Enter Username\"\r\n                                    id=\"createUsernameInput\"\r\n                                    ref={this.createUsernameRef} required={true} />\r\n                            </div>\r\n                            <p />\r\n                            <div className=\"input-text\">\r\n                                <input className=\"form-control\" ref={this.createPasswordRef} type=\"password\" placeholder=\"Enter Password\" pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\" required={true} />\r\n                            </div>\r\n                            <p />\r\n                            <div className=\"input-text\">\r\n                                <input className=\"form-control\" placeholder=\"Enter Security Question\"\r\n                                    id=\"securityQuestion\"\r\n                                    ref={this.securityQuestionRef} required={true} />\r\n                            </div>\r\n                            <p />\r\n                            <div className=\"input-text\">\r\n                                <input className=\"form-control\" placeholder=\"Enter Security Answer\"\r\n                                    id=\"securityAnswer\"\r\n                                    ref={this.securityAnswerRef} required={true} />\r\n                            </div>\r\n                            <p />\r\n                            <button type=\"submit\" className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n                                Sign Up\r\n                            </button>\r\n                            <span className=\"clear-btn\" onClick={this.returnToLogin}>Go Back</span>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nexport default class AddDataPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\n        if (this.props.mode === AppMode.ADD_DATA) {\r\n            this.state = {\r\n                date:  today.toISOString().substr(0,10), \r\n                course: \"\",\r\n                type: \"practice\",\r\n                holes: \"18\",\r\n                strokes: 80,\r\n                minutes: 50,\r\n                seconds: 0,\r\n                notes: \"\",\r\n                faIcon: \"fa fa-save\",\r\n                btnLabel: \"Save Round Data\"\r\n            }\r\n        }\r\n        else {\r\n            //if editing an existing round, the starting state is the round's\r\n            //current data\r\n            this.state = this.props.startData;\r\n            this.state.faIcon = \"fa fa-edit\";\r\n            this.state.btnLabel = \"Update Round Data\";\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"seconds\") {\r\n          this.setState({seconds: (event.target.value.length < 2 ? \"0\" + event.target.value : \r\n            event.target.value)});\r\n        } else {\r\n          this.setState({[name]: event.target.value});\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                       btnLabel: (this.props.mode === AppMode.ADD_DATA ? \r\n                                    \"Saving...\" : \"Updating...\")});\r\n        //Prepare current round data to be saved\r\n        let roundData = this.state;\r\n        delete roundData.faIcon;\r\n        delete roundData.btnLabel;\r\n        console.log('ADD ROUND', roundData, this.props, this.props.saveRound);\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.props.saveRound,1000,roundData); \r\n        event.preventDefault(); \r\n    }\r\n      \r\n      //computeSGS -- properly computes speedgolf score based on the values of the\r\n      //strokes, minutes and seconds fields. We choose not to save SGS in state\r\n      //it can be readily computed.\r\n    computeSGS = () => {\r\n        return (Number(this.state.strokes) + Number(this.state.minutes)) \r\n                    + \":\" + this.state.seconds;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className = \"padded-page\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                <center>\r\n                    <label>\r\n                    Date:\r\n                    <input name=\"date\" className=\"form-control form-center\" \r\n                        type=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                    Course:\r\n                    <input name=\"course\" className=\"form-control form-center\" type=\"text\"\r\n                        value={this.state.course} onChange={this.handleChange}\r\n                        placeholder=\"Course played\" size=\"50\" maxLength=\"50\" />\r\n                    </label>\r\n                <p></p>\r\n                <label>Type:\r\n                <select name=\"type\" value={this.state.type} \r\n                    className=\"form-control form-center\" onChange={this.handleChange}>\r\n                    <option value=\"practice\">Practice</option>\r\n                    <option value=\"tournament\">Tournament</option>\r\n                </select> \r\n                </label>\r\n                <p></p>\r\n                <label># Holes:\r\n                <select name=\"holes\" value={this.state.holes} \r\n                    className=\"form-control form-center\" onChange={this.handleChange}>\r\n                    <option value=\"9\">9</option>\r\n                    <option value=\"18\">18</option>\r\n                </select> \r\n                </label>\r\n                <p></p>\r\n                <label># Strokes:\r\n                <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \r\n                    min=\"9\" max=\"200\" value={this.state.strokes} \r\n                    onChange={this.handleChange} />\r\n                </label>\r\n                <p></p>\r\n                <label>Time: <br></br>\r\n                <input name=\"minutes\" type=\"number\" size=\"3\"\r\n                    min=\"10\" max=\"400\" value={this.state.minutes}\r\n                    onChange={this.handleChange} />:  \r\n                <input name=\"seconds\" type=\"number\" size=\"2\"\r\n                    min=\"0\" max=\"60\" value={this.state.seconds} onChange={this.handleChange} />\r\n                </label>\r\n                <p></p>\r\n                <label>Speedgolf Score: <br></br>\r\n                    <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \r\n                        disabled={true} value={this.computeSGS()} />\r\n                </label>\r\n                <p></p>\r\n                <label>Notes:\r\n                    <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                        placeholder=\"Enter round notes\" value={this.state.notes} onChange={this.handleChange} />\r\n                </label>\r\n                <p></p>\r\n                <p></p>\r\n                <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n                    className=\"btn btn-primary btn-color-theme\">\r\n                    <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}</button>\r\n                </center>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nexport default class DataTablePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {confirmDelete: false}; \r\n    }\r\n\r\n    //renderTable -- render an HTML table displaying the rounds logged\r\n    //by the current user and providing buttons to view/edit and delete each round.\r\n    renderTable = () => {\r\n        let table = [];\r\n        console.log('Render Data Table', this.props.rounds);\r\n        for (const r in this.props.rounds) {\r\n            table.push(\r\n                <tr key={r}>\r\n                    <td>{this.props.rounds[r].date}</td>\r\n                    <td>{this.props.rounds[r].course}</td>\r\n                    <td>{(Number(this.props.rounds[r].strokes) + \r\n                            Number(this.props.rounds[r].minutes)) +\r\n                            \":\" + this.props.rounds[r].seconds + \" (\" + \r\n                            this.props.rounds[r].strokes + \r\n                            \" in \" + this.props.rounds[r].minutes + \":\" + \r\n                            this.props.rounds[r].seconds + \")\"}\r\n                    </td>\r\n                    <td>\r\n                        <button className=\"btn\" onClick={() => this.editRound(r)}>\r\n                            <span className=\"fa fa-edit\"></span></button>\r\n                        <button className=\"btn\"  onClick={() => this.confirmDelete(r)}>\r\n                                <span className=\"fa fa-trash\"></span></button>\r\n                    </td>\r\n                </tr> \r\n            );\r\n        }\r\n        return table;\r\n    }\r\n\r\n    editRound = (id) => {\r\n        this.props.setEditId(id);\r\n        this.props.changeMode(AppMode.EDIT_DATA);\r\n    }\r\n    \r\n    confirmDelete = (id) => {\r\n        this.props.deleteRound(id);\r\n    }\r\n\r\n    //render--render the entire rounds table with header, displaying a \"No\r\n    //Rounds Logged\" message in case the table is empty.\r\n    render() {\r\n        return(\r\n        <div className=\"padded-page\">\r\n            <h1></h1>\r\n            <table className=\"table table-hover\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th>Course</th>\r\n                        <th>Score</th>\r\n                        <th>Edit/Delete Item</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {Object.keys(this.props.rounds).length === 0 ? \r\n                    <tr>\r\n                        <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n                    </tr> : this.renderTable()\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport AppMode from '../AppMode';\r\nimport AddDataPage from './AddDataPage';\r\nimport DataTablePage from './DataTablePage';\r\nimport FloatingButton from '../components/FloatingButton';\r\n\r\nexport default class DataPage extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\trounds: [],\r\n\t\t\troundCount: 0,\r\n\t\t\tdeleteId: \"\",\r\n\t\t\teditId: \"\"\r\n\t\t};\r\n\t\tthis.fetchRounds();\r\n\r\n        // let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\")); \r\n        console.log(this.props.user.id);\r\n        \r\n\t}\r\n\t\r\n\tfetchRounds = async () => {\r\n        let url = \"/rounds/\" + this.props.user.id;\r\n\t\tlet res = await fetch(url, {method: 'GET'});\r\n\t\tlet body = await res.json();\r\n\t\t\r\n\t\tlet rounds = JSON.parse(body);\r\n\r\n\t\tconsole.log('RESPONSE TO FETCH',res,body, rounds);\r\n\r\n        if (res.status != 200) {\r\n\t\t\talert('Failure to retrieve user data.')\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\trounds: rounds,\r\n\t\t\troundCount: rounds.length,\r\n\t\t\tdeleteId: \"\",\r\n\t\t\teditId: \"\"\r\n\t\t});\r\n\t}\r\n\r\n    addRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.user.id;\r\n\r\n\t\tconst res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)\r\n\t\t}); \r\n\t\t\r\n\t\tlet newRounds = this.state.rounds;\r\n\r\n\t\tnewRounds = newRounds.concat(newData);\r\n\r\n        this.setState({rounds: newRounds, roundCount: newRounds.length});\r\n        this.props.changeMode(AppMode.TABLE);\r\n    }\r\n\r\n    editRound = async (newData) => {\r\n\t\tconst url = '/rounds/' + this.props.user.id + '/' + this.state.rounds[this.state.editId][\"_id\"];\r\n\r\n\t\tconst res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)\r\n\t\t}); \r\n\t\t\r\n\t\tlet newRounds = this.state.rounds;\r\n\t\tnewRounds[this.state.editId] = newData;\r\n        this.setState({rounds: newRounds, roundCount: newRounds.length});\r\n        this.props.changeMode(AppMode.TABLE);\r\n  \t}\r\n\r\n    setEditId = (val) => {\r\n      \tthis.setState({editId: val});\r\n    }\r\n\r\n    deleteRound = async (id) => {\r\n\t\tconst url = '/rounds/' + this.props.user.id + '/' + this.state.rounds[id][\"_id\"];\r\n\r\n\t\tconst res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n            method: 'DELETE'\r\n\t\t}); \r\n\t\t\r\n\t\tlet newRounds = this.state.rounds;\r\n\t\tdelete newRounds[id];\r\n\t\tthis.setState({rounds: newRounds, roundCount: newRounds.length});\r\n    }\r\n\r\n    render () {\r\n        switch(this.props.mode) {\r\n            case AppMode.TABLE:\r\n                return (\r\n                  <React.Fragment>\r\n                  <DataTablePage \r\n                    rounds={this.state.rounds}\r\n                    changeMode={this.props.changeMode}\r\n                    menuOpen={this.props.menuOpen}\r\n                    setEditId={this.setEditId}\r\n                    deleteRound={this.deleteRound} /> \r\n                  <FloatingButton\r\n                      handleClick={() => \r\n                        this.props.changeMode(AppMode.ADD_DATA)}\r\n                      menuOpen={this.props.menuOpen}\r\n                      icon={\"fa fa-plus\"} />\r\n                  </React.Fragment>\r\n                );\r\n            case AppMode.ADD_DATA:\r\n                return (\r\n                    <AddDataPage\r\n                      mode={this.props.mode}\r\n                      startData={\"\"} \r\n                      saveRound={this.addRound} />\r\n                );\r\n            case AppMode.EDIT_DATA:\r\n                return (\r\n                    <AddDataPage\r\n                      mode={this.props.mode}\r\n                      startData={this.state.rounds[this.state.editId]} \r\n                      saveRound={this.editRound} />\r\n                );\r\n        }\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/main.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nimport AppMode from './AppMode';\n\nimport NavBar from './components/NavBar';\nimport SideMenu from './components/SideMenu';\nimport ModeBar from './components/ModeBar';\nimport FloatingButton from './components/FloatingButton';\n\nimport LoginPage from './pages/LoginPage';\nimport AddDataPage from './pages/AddDataPage';\nimport DataPage from './pages/Data';\n\nconst modeTitle = {};\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\nmodeTitle[AppMode.TABLE] = \"Data Table Page\";\nmodeTitle[AppMode.ADD_DATA] = \"Add Data Page\";\nmodeTitle[AppMode.EDIT_DATA] = \"Edit Data Page\";\n\nconst modeToPage = {};\nmodeToPage[AppMode.LOGIN] = LoginPage;\nmodeToPage[AppMode.TABLE] = DataPage;\nmodeToPage[AppMode.ADD_DATA] = DataPage;\nmodeToPage[AppMode.EDIT_DATA] = DataPage;\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {mode: AppMode.LOGIN, menuOpen: false, showAbout: false, authenticated: false, user: {}};\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"click\",this.handleClick);\n        if (!this.state.authenticated) { \n            fetch(\"/auth/test\")\n                .then((response) => response.json())\n                .then((obj) => {\n                    if (obj.isAuthenticated) {\n                        let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\n                        if (data == null) {\n                            data = {};\n                        }\n                        if (!data.hasOwnProperty(obj.user.id)) {\n                            data[obj.user.id] = {\n                                accountInfo: {\n                                    provider: obj.user.provider,\n                                    password: '',\n                                    securityQuestion: '',\n                                    securityAnswer: ''\n                                },\n                                rounds: {}, \n                                roundCount: 0\n                            };\n                            localStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\n                        }\n\n                        console.log('USER: ', obj.user);\n                        \n                        this.setState({\n                            authenticated: true,\n                            user: obj.user,\n                            mode: AppMode.TABLE\n                        });\n                    }\n                })\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"click\",this.handleClick);\n    }\n\n    handleChangeMode = (newMode) => {\n        this.setState({mode: newMode});\n    }\n\n    setUserId = (Id) => {\n        this.setState({userId: Id});\n    }\n\n    openMenu = () => {\n        this.setState({menuOpen : true});\n    }\n        \n    closeMenu = () => {\n        this.setState({menuOpen : false});\n    }\n        \n    toggleMenuOpen = () => {\n        console.log('TOGGLE MENU');\n        console.log(this.state.menuOpen);\n        this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n        console.log(this.state.menuOpen);\n    }\n\n    handleClick = (event) => {\n        if (this.state.menuOpen) {\n            this.closeMenu();\n        }\n        event.stopPropagation();\n    }\n\n    setUser = (userObj) => {\n        this.setState({user: userObj});\n    }\n    \n    setAuthenticated = (auth) => {\n        this.setState({authenticated: auth});\n    }\n\n    toggleAbout = () => {\n        this.setState(prevState => ({showAbout: !prevState.showAbout}));\n    }\n\n    renderAbout = () => {\n        console.log('render about');\n        return (\n          <div className=\"modal\" role=\"dialog\">\n            <div className=\"modal-dialog modal-lg\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h3 className=\"modal-title\"><b>About SpeedScore</b>\n                    <button className=\"close-modal-button\" onClick={this.toggleAbout}>\n                      &times;</button>\n                  </h3>\n                </div>\n                <div className=\"modal-body\">\n                  <img\n                  src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\n                  height=\"200\" width=\"200\"/>\n                  <h3>The World's First and Only Suite of Apps for\n                  Speedgolf</h3>\n                  <p>Version CptS 489 Sp20, Build W06C2 (React)<br/>\n                  &copy; 2017-20 The Professor of Speedgolf. All rights\n                  reserved.\n                  </p>\n                  <div style={{textAlign: \"left\"}}>\n                    <p>SpeedScore apps support</p>\n                    <ul>\n                    <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\n                    <li>tracking personal speedgolf rounds and sharing results\n                    (<i>SpeedScore Track&reg;</i>)</li>\n                    <li>finding speedgolf-friendly courses, booking tee times, and\n                    paying to play speedgolf by the minute (<i>SpeedScore\n                    Play&reg;</i>)</li>\n                    </ul>\n                    <p>SpeedScore was first developed by Dr. Chris Hundhausen,\n                    associate professor of computer science at Washington State\n                    University and the <i>Professor of Speedgolf</i>, with support\n                    from Scott Dawley, CEO of Speedgolf USA, LLC. It leverages\n                    Google server-side technologies.</p>\n                    <p>For more information on SpeedScore, visit <a\n                    href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\n                    site</a>. For more information on speedgolf, visit <a\n                    href=\"http://playspeedgolf.com\"\n                    target=\"_blank\">playspeedgolf.com</a> and <a\n                    href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\n                    USA</a>.</p>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button className=\"btn btn-primary btn-color-theme\"\n                    onClick={this.toggleAbout}>OK</button>\n                  </div>\n              </div>\n            </div>\n          </div>\n        );\n    }\n\n    render() {\n        const ModePage = modeToPage[this.state.mode];\n        console.log('SHOW ABOUT', this.state.showAbout);\n        return (\n            <div onClick={this.handleClick}>\n                <NavBar title={modeTitle[this.state.mode]} mode={this.state.mode}\n                    changeMode={this.handleChangeMode}\n                    menuOpen={this.state.menuOpen}\n                    toggleMenuOpen={this.toggleMenuOpen}/>\n                <SideMenu mode={this.state.mode}\n                    menuOpen={this.state.menuOpen}\n                    changeMode={this.handleChangeMode}\n                    showAbout={this.toggleAbout}\n                    user={this.state.user}\n                    setUser={this.setUser}/>\n                <ModeBar mode={this.state.mode}\n                    changeMode={this.handleChangeMode}\n                    menuOpen={this.state.menuOpen}\n                    />\n                <ModePage \n                    mode={this.state.mode} \n                    menuOpen={this.state.menuOpen}\n                    changeMode={this.handleChangeMode}\n                    user={this.state.user}/>\n                {this.state.showAbout ? this.renderAbout() : null}\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}