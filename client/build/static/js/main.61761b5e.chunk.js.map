{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/FloatingButton.js","pages/LoginPage.js","pages/AddDataPage.js","pages/DataTablePage.js","pages/Data.js","index.js"],"names":["AppMode","LOGIN","TABLE","ADD_DATA","EDIT_DATA","Object","freeze","NavBar","props","handleMenuBtnClick","mode","changeMode","toggleMenuOpen","getMenuBtnIcon","menuOpen","className","this","onClick","id","src","alt","height","width","title","React","Component","SideMenu","renderModeMenuItems","FEED","ROUNDS","COURSES","user","profileImageUrl","username","showAbout","ModeBar","handleModeBtnClick","newMode","FloatingButton","handleClick","icon","LoginPage","handleOAuthLogin","provider","window","open","handleOAuthLoginClick","setState","setTimeout","handleLogin","data","JSON","parse","localStorage","getItem","userNameInputRef","current","value","rounds","roundCount","setItem","stringify","hasOwnProperty","loginBtnIcon","loginBtnLabel","setUserId","console","log","handleLoginSubmit","event","a","preventDefault","url","passwordInputRef","fetch","method","res","status","text","resText","loginMsg","hideErrorMsg","handleCreateAccount","createUsernameRef","accountInfo","password","createPasswordRef","securityQuestion","securityQuestionRef","securityAnswer","securityAnswerRef","headers","body","alert","returnToLogin","handleLookUpAccount","accountEmailRef","focus","json","resetEmail","resetQuestion","resetAnswer","showLookUpAccountDialog","showSecurityQuestionDialog","handleSecurityQuestionResponse","state","select","showPasswordResetDialog","handleResetPassword","resetPasswordRef","resetPasswordRepeatRef","resetInfo","showCreateAccount","createShow","loginShow","createRef","githubIcon","githubLabel","onSubmit","placeholder","ref","required","type","pattern","AddDataPage","handleChange","name","target","seconds","length","handleSubmit","faIcon","btnLabel","roundData","saveRound","computeSGS","Number","strokes","minutes","today","Date","now","getTimezoneOffset","date","toISOString","substr","course","holes","notes","startData","onChange","size","maxLength","min","max","disabled","rows","cols","style","fontSize","DataTablePage","renderTable","table","r","push","key","editRound","confirmDelete","setEditId","deleteRound","keys","colSpan","fontStyle","DataPage","addRound","newData","newRounds","roundNum","editId","val","deleteId","Fragment","modeTitle","modeToPage","App","handleChangeMode","Id","userId","openMenu","closeMenu","prevState","stopPropagation","setUser","userObj","setAuthenticated","auth","authenticated","toggleAbout","renderAbout","role","textAlign","href","addEventListener","then","response","obj","isAuthenticated","removeEventListener","ModePage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61761b5e.chunk.js","sourcesContent":["const AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    TABLE: \"TableMode\",\r\n    ADD_DATA: \"AddDataMode\",\r\n    EDIT_DATA: \"EditDataMode\"\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nexport default class NavBar extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    handleMenuBtnClick = () => {\r\n        if (this.props.mode === AppMode.ADD_DATA || \r\n            this.props.mode === AppMode.EDIT_DATA) {\r\n            this.props.changeMode(AppMode.TABLE);\r\n        } else if (this.props.mode !== AppMode.LOGIN) {\r\n            this.props.toggleMenuOpen();\r\n        }\r\n    }\r\n\r\n    getMenuBtnIcon = () => {\r\n        if (this.props.mode === AppMode.ADD_DATA ||\r\n            this.props.mode === AppMode.EDIT_DATA)\r\n            return \"fa fa-arrow-left\";\r\n        if (this.props.menuOpen)\r\n            return \"fa fa-times\";\r\n        return \"fa fa-bars\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"navbar\" + (this.props.mode === AppMode.LOGIN ?\r\n                \" invisible\" : \" visible\")}>  \r\n                <span className=\"navbar-items\">\r\n                <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\r\n                    <span id=\"sidemenu-btn-icon\" \r\n                    className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\r\n                    </span>\r\n                </button>\r\n                <img src=\"http://tiny.cc/sslogo\" alt=\"Speed Score Logo\" height=\"38px\"\r\n                width=\"38px\" />\r\n                <span id=\"topBarTitle\" className=\"navbar-title\">\r\n                    &nbsp;{this.props.title}\r\n                </span>\r\n                </span>\r\n            </div>\r\n        ); \r\n    }\r\n}","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nexport default class SideMenu extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    renderModeMenuItems = () => {\r\n        switch (this.props.mode) {\r\n            case AppMode.FEED:\r\n                return(\r\n                <div>\r\n                    <a className=\"sidemenu-item\">\r\n                        <span className=\"fa fa-users\"></span>&nbsp;Followed Users\r\n                    </a>\r\n                    <a className=\"sidemenu-item\">\r\n                        <span className=\"fa fa-search\"></span>&nbsp;Search Feed\r\n                    </a>\r\n                </div>\r\n                );\r\n                break;\r\n            \r\n            case AppMode.ROUNDS:\r\n                return(\r\n                <div>\r\n                    <a className=\"sidemenu-item\">\r\n                        <span className=\"fa fa-plus\"></span>&nbsp;Log New Round\r\n                    </a>\r\n                    <a className=\"sidemenu-item\">\r\n                        <span className=\"fa fa-search\"></span>&nbsp;Search Rounds\r\n                    </a>\r\n                </div>\r\n                );\r\n            \r\n            break;\r\n            \r\n            case AppMode.COURSES:\r\n                return(\r\n                <div>\r\n                    <a className=\"sidemenu-item\">\r\n                        <span className=\"fa fa-plus\"></span>&nbsp;Add a Course\r\n                    </a>\r\n                    <a className=\"sidemenu-item\">\r\n                        <span className=\"fa fa-search\"></span>&nbsp;Search Courses\r\n                    </a>\r\n                </div>\r\n                );\r\n            \r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n        <div className= {\"sidemenu \" +\r\n            (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")} >\r\n            {/* SIDE MENU TITLE */}\r\n            {this.props.user ? (<div className=\"sidemenu-title\">\r\n                <img src={this.props.user.profileImageUrl} height='50' width='50' />\r\n                <span className=\"sidemenu-userID\">&nbsp;{this.props.user.username}</span>\r\n            </div>) : null}\r\n\r\n            {/* MENU CONTENT */}\r\n            {/*Mode-based menu items */}\r\n            {/* {this.renderModeMenuItems()} */}\r\n            <a className=\"sidemenu-item\" onClick={this.props.showAbout}>\r\n                <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\r\n\r\n            <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.LOGIN)}>\r\n                <span className=\"fa fa-sign-out\"></span>&nbsp;Log Out</a>\r\n        </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nexport default class ModeBar extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    handleModeBtnClick = (newMode) => {\r\n        if (this.props.mode != newMode) {\r\n            this.props.changeMode(newMode);\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div id =\"bottomBar\" className={\"modebar\" + (this.props.mode === AppMode.LOGIN ?\r\n                \" invisible\" : \" visible\")}>\r\n                <a className={\"modebar-btn\" + (this.props.mode === AppMode.TABLE ? \" modebar-item-selected\" : \"\")}\r\n                    onClick={this.props.menuOpen ? null :\r\n                        () => this.handleModeBtnClick(AppMode.TABLE)}>\r\n                    <span className=\"modebar-icon fa fa-th-list\"></span>\r\n                    <span className=\"modebar-text\">Data Table Mode</span>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class FloatingButton extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n          <div>\r\n            <a className=\"floatbtn\" onClick={(this.props.menuOpen ? null : \r\n               this.props.handleClick)}>\r\n              <span className={\"floatbtn-icon \" + this.props.icon}></span>\r\n            </a>\r\n          </div>  \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nexport default class LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.userNameInputRef = React.createRef();\r\n        this.passwordInputRef = React.createRef();\r\n\r\n        this.createUsernameRef = React.createRef();\r\n        this.createPasswordRef = React.createRef();\r\n        this.securityQuestionRef = React.createRef();\r\n        this.securityAnswerRef = React.createRef();\r\n\r\n        this.state = {  \r\n            loginBtnIcon: \"fa fa-sign-in\",\r\n            loginBtnLabel: \"Log In\",\r\n            githubIcon: \"fa fa-github\",\r\n            githubLabel: \"Sign in with GitHub\",\r\n            loginShow: true,\r\n            createShow: false\r\n        }\r\n    }\r\n\r\n    //handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n    //provider\r\n\r\n    handleOAuthLogin = (provider) => {\r\n        window.open(`/auth/${provider}`,\"_self\");\r\n    }\r\n        \r\n    //handleOAuthLoginClick -- Called whent the user clicks on button to\r\n    //authenticate via a third-party OAuth service. The name of the provider is\r\n    //passed in as a parameter.\r\n    handleOAuthLoginClick = (provider) => {\r\n        this.setState({[provider + \"Icon\"] : \"fa fa-spin fa-spinner\",\r\n        [provider + \"Label\"] : \"Connecting...\"});\r\n        setTimeout(() => this.handleOAuthLogin(provider),0);\r\n    }\r\n\r\n    handleLogin = () => {\r\n        //Stop spinner\r\n        let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\r\n        //Create fresh user data object for new user\r\n        if (data == null) {\r\n            data = {}; //create empty data object\r\n            data[this.userNameInputRef.current.value] = {\r\n                rounds: {}, \r\n                roundCount: 0\r\n            };\r\n            localStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\r\n        }\r\n        else if (!data.hasOwnProperty(this.userNameInputRef.current.value)) {\r\n            data[this.userNameInputRef.current.value] = {\r\n                rounds: {}, \r\n                roundCount: 0\r\n            };\r\n            localStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\r\n        }\r\n        \r\n        this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n                    loginBtnLabel: \"Log In\"});\r\n        //Set current user\r\n        \r\n        this.props.setUserId(this.userNameInputRef.current.value);\r\n        //Trigger switch to FEED mode (default app landing page)\r\n        this.props.changeMode(AppMode.TABLE);\r\n        console.log('LOGGED IN', AppMode.TABLE);\r\n    }\r\n\r\n    handleLoginSubmit = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n                        loginBtnLabel: \"Logging In...\"});\r\n\r\n        const url = \"auth/login?username=\" + this.userNameInputRef.current.value +\r\n            \"&password=\" + this.passwordInputRef.current.value;\r\n        const res = await fetch(url, {method: 'POST'});\r\n\r\n        if (res.status == 200) { //successful login!\r\n            window.open(\"/\",\"_self\");\r\n        } \r\n\r\n        else { //Unsuccessful login\r\n            const resText = await res.text();\r\n            this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n            loginBtnLabel: \"Log In\",\r\n            loginMsg: resText}, () => setTimeout(this.hideErrorMsg,3000));\r\n        }\r\n\r\n        //Initiate spinner for 1 second\r\n        setTimeout(this.handleLogin,1000);\r\n    }\r\n\r\n    handleCreateAccount = async (event) => {\r\n        event.preventDefault();\r\n        const url = '/users/' + this.createUsernameRef.current.value;\r\n        const accountInfo = {password: this.createPasswordRef.current.value,\r\n                           securityQuestion: this.securityQuestionRef.current.value,\r\n                           securityAnswer: this.securityAnswerRef.current.value};\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n            method: 'POST',\r\n            body: JSON.stringify(accountInfo)\r\n        }); \r\n        if (res.status == 200) {\r\n            alert(\"Your account has been succesfully created! Please enter your username and password again to login to your new account.\");\r\n            this.returnToLogin();\r\n        } \r\n        else {\r\n            //Grab textual error message\r\n            const resText = await res.text();\r\n            alert(resText); //most likely the username is already taken\r\n        }\r\n    }\r\n\r\n    handleLookUpAccount = async (event) => {\r\n        event.preventDefault();\r\n        let url = \"/users/\" + this.accountEmailRef.current.value;\r\n        let res = await fetch(url, {method: 'GET'});\r\n        let body;\r\n        if (res.status != 200) {\r\n            alert(\"Sorry, there is no account associated with that email address.\");\r\n            this.accountEmailRef.current.focus();\r\n            return;\r\n        }\r\n        \r\n        body = await res.json();\r\n        //if here, account exists -- user account info and push to state vars\r\n        this.setState({resetEmail: this.accountEmailRef.current.value,\r\n        resetQuestion: body.securityQuestion,\r\n        resetAnswer: body.securityAnswer,\r\n        showLookUpAccountDialog: false,\r\n        showSecurityQuestionDialog: true});\r\n        this.userNameInputRef.current.value = \"\"; //clear out field\r\n    }\r\n\r\n    handleSecurityQuestionResponse = async(event) => {\r\n        event.preventDefault();\r\n\r\n        if (this.securityAnswerRef.current.value != this.state.resetAnswer) {\r\n            alert(\"Sorry, that is not the correct answer to the security question.\");\r\n            this.securityAnswerRef.current.select();\r\n            return;\r\n        }\r\n\r\n        this.setState({showSecurityQuestionDialog: false,\r\n        showPasswordResetDialog: true});\r\n        this.securityAnswerRef.current.value = \"\"; //clear out field\r\n    }\r\n\r\n    handleResetPassword = async(event) => {\r\n        event.preventDefault();\r\n        \r\n        if (this.resetPasswordRef.current.value != this.resetPasswordRepeatRef.current.value) {\r\n            alert(\"Sorry, The passwords you entered do not match. Please try again.\");\r\n            this.resetPasswordRepeatRef.current.select();\r\n            return;\r\n        }\r\n        \r\n        const url = '/users/' + this.state.resetEmail;\r\n        const resetInfo = {password: this.resetPasswordRef.current.value};\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'PUT',\r\n            body: JSON.stringify(resetInfo)\r\n        });\r\n        \r\n        const text = await res.text();\r\n        alert(text);\r\n        this.resetPasswordRef.current.value = \"\";\r\n        this.resetPasswordRepeatRef.current.value = \"\";\r\n        this.setState({showPasswordResetDialog: false});\r\n    }\r\n\r\n    hideErrorMsg = () => {\r\n        this.userNameInputRef.current.value = \"\";\r\n        this.passwordInputRef.current.value = \"\";\r\n        this.setState({loginMsg: \"\"});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.userNameInputRef.current.focus();\r\n    }\r\n\r\n    showCreateAccount = () => {\r\n        this.setState({\r\n            createShow: true,\r\n            loginShow: false\r\n        });\r\n\r\n        this.createUsernameRef.current.value = this.userNameInputRef.current.value ? this.userNameInputRef.current.value : \"\";\r\n        this.createPasswordRef.current.value = \"\";\r\n        this.securityQuestionRef.current.value = \"\";\r\n        this.securityAnswerRef.current.value = \"\";\r\n    }\r\n\r\n    returnToLogin = () => {\r\n        this.userNameInputRef.current.value = \"\";\r\n        this.passwordInputRef.current.value = \"\";\r\n        this.setState({\r\n            createShow: false,\r\n            loginShow: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div id=\"login-mode-div\" className=\"login-page\">\r\n                    <div className={\"login-form \" + (this.state.loginShow ? \"\" : \"create-state\")}>\r\n                        <img className=\"speedgolf-logo\" src=\"http://tiny.cc/sslogo\" />\r\n                        \r\n                        <h1 className=\"form-heading\">Welcome to SpeedScore</h1>\r\n                        <form id=\"loginInterface\" className=\"login-interface\" onSubmit={this.handleLoginSubmit}>\r\n                            <div className=\"input-text\">\r\n                                <input className=\"form-control\" placeholder=\"Enter Username\"\r\n                                    id=\"usernameInput\"\r\n                                    ref={this.userNameInputRef} required={true} />\r\n                            </div>\r\n                            <p />\r\n                            <div className=\"input-text\">\r\n                                <input className=\"form-control\" ref={this.passwordInputRef} type=\"password\" placeholder=\"Enter Password\" pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\" required={true} />\r\n                            </div>\r\n                            <span className=\"forgot-password\">Forgot Password?</span>\r\n                            <button type=\"submit\" className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n                                <span className={this.state.loginBtnIcon}/>\r\n                                    &nbsp;{this.state.loginBtnLabel}\r\n                            </button>\r\n                            <span className=\"clear-btn\" onClick={this.showCreateAccount}>Create Account</span>\r\n                            <button type=\"button\" className=\"btn btn-github\"\r\n                                onClick={() => this.handleOAuthLoginClick(\"github\")}>\r\n                                <span className={this.state.githubIcon}></span>&nbsp;\r\n                                {this.state.githubLabel}\r\n                            </button>\r\n                            <p>\r\n                                <i>Version CptS 489 Sp20</i>\r\n                            </p>\r\n                            <p>\r\n                                <i>© 2020 Professor of Speedgolf. All rights reserved.</i>\r\n                            </p>\r\n                        </form>\r\n                    </div>\r\n                    <div className={\"login-form \" + (this.state.createShow ? \"\" : \"login-state\")}>\r\n                        <h1 className=\"form-heading\">Create an Account</h1>\r\n                        <form id=\"createInterface\" className=\"login-interface\" onSubmit={this.handleCreateAccount}>\r\n                            <div className=\"input-text\">\r\n                                <input className=\"form-control\" placeholder=\"Enter Username\"\r\n                                    id=\"createUsernameInput\"\r\n                                    ref={this.createUsernameRef} required={true} />\r\n                            </div>\r\n                            <p />\r\n                            <div className=\"input-text\">\r\n                                <input className=\"form-control\" ref={this.createPasswordRef} type=\"password\" placeholder=\"Enter Password\" pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\" required={true} />\r\n                            </div>\r\n                            <p />\r\n                            <div className=\"input-text\">\r\n                                <input className=\"form-control\" placeholder=\"Enter Security Question\"\r\n                                    id=\"securityQuestion\"\r\n                                    ref={this.securityQuestionRef} required={true} />\r\n                            </div>\r\n                            <p />\r\n                            <div className=\"input-text\">\r\n                                <input className=\"form-control\" placeholder=\"Enter Security Answer\"\r\n                                    id=\"securityAnswer\"\r\n                                    ref={this.securityAnswerRef} required={true} />\r\n                            </div>\r\n                            <p />\r\n                            <button type=\"submit\" className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n                                Sign Up\r\n                            </button>\r\n                            <span className=\"clear-btn\" onClick={this.returnToLogin}>Go Back</span>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nexport default class AddDataPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\n        if (this.props.mode === AppMode.ADD_DATA) {\r\n            this.state = {\r\n                date:  today.toISOString().substr(0,10), \r\n                course: \"\",\r\n                type: \"practice\",\r\n                holes: \"18\",\r\n                strokes: 80,\r\n                minutes: 50,\r\n                seconds: \"00\",\r\n                notes: \"\",\r\n                faIcon: \"fa fa-save\",\r\n                btnLabel: \"Save Round Data\"\r\n            }\r\n        }\r\n        else {\r\n            //if editing an existing round, the starting state is the round's\r\n            //current data\r\n            this.state = this.props.startData;\r\n            this.state.faIcon = \"fa fa-edit\";\r\n            this.state.btnLabel = \"Update Round Data\";\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"seconds\") {\r\n          this.setState({seconds: (event.target.value.length < 2 ? \"0\" + event.target.value : \r\n            event.target.value)});\r\n        } else {\r\n          this.setState({[name]: event.target.value});\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                       btnLabel: (this.props.mode === AppMode.ADD_DATA ? \r\n                                    \"Saving...\" : \"Updating...\")});\r\n        //Prepare current round data to be saved\r\n        let roundData = this.state;\r\n        delete roundData.faIcon;\r\n        delete roundData.btnLabel;\r\n        console.log('ADD ROUND', roundData, this.props, this.props.saveRound);\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.props.saveRound,1000,roundData); \r\n        event.preventDefault(); \r\n    }\r\n      \r\n      //computeSGS -- properly computes speedgolf score based on the values of the\r\n      //strokes, minutes and seconds fields. We choose not to save SGS in state\r\n      //it can be readily computed.\r\n    computeSGS = () => {\r\n        return (Number(this.state.strokes) + Number(this.state.minutes)) \r\n                    + \":\" + this.state.seconds;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className = \"padded-page\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                <center>\r\n                    <label>\r\n                    Date:\r\n                    <input name=\"date\" className=\"form-control form-center\" \r\n                        type=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                    Course:\r\n                    <input name=\"course\" className=\"form-control form-center\" type=\"text\"\r\n                        value={this.state.course} onChange={this.handleChange}\r\n                        placeholder=\"Course played\" size=\"50\" maxLength=\"50\" />\r\n                    </label>\r\n                <p></p>\r\n                <label>Type:\r\n                <select name=\"type\" value={this.state.type} \r\n                    className=\"form-control form-center\" onChange={this.handleChange}>\r\n                    <option value=\"practice\">Practice</option>\r\n                    <option value=\"tournament\">Tournament</option>\r\n                </select> \r\n                </label>\r\n                <p></p>\r\n                <label># Holes:\r\n                <select name=\"holes\" value={this.state.holes} \r\n                    className=\"form-control form-center\" onChange={this.handleChange}>\r\n                    <option value=\"9\">9</option>\r\n                    <option value=\"18\">18</option>\r\n                </select> \r\n                </label>\r\n                <p></p>\r\n                <label># Strokes:\r\n                <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \r\n                    min=\"9\" max=\"200\" value={this.state.strokes} \r\n                    onChange={this.handleChange} />\r\n                </label>\r\n                <p></p>\r\n                <label>Time: <br></br>\r\n                <input name=\"minutes\" type=\"number\" size=\"3\"\r\n                    min=\"10\" max=\"400\" value={this.state.minutes}\r\n                    onChange={this.handleChange} />:  \r\n                <input name=\"seconds\" type=\"number\" size=\"2\"\r\n                    min=\"0\" max=\"60\" value={this.state.seconds} onChange={this.handleChange} />\r\n                </label>\r\n                <p></p>\r\n                <label>Speedgolf Score: <br></br>\r\n                    <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \r\n                        disabled={true} value={this.computeSGS()} />\r\n                </label>\r\n                <p></p>\r\n                <label>Notes:\r\n                    <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                        placeholder=\"Enter round notes\" value={this.state.notes} onChange={this.handleChange} />\r\n                </label>\r\n                <p></p>\r\n                <p></p>\r\n                <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n                    className=\"btn btn-primary btn-color-theme\">\r\n                    <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}</button>\r\n                </center>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nexport default class DataTablePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {confirmDelete: false}; \r\n    }\r\n\r\n    //renderTable -- render an HTML table displaying the rounds logged\r\n    //by the current user and providing buttons to view/edit and delete each round.\r\n    renderTable = () => {\r\n        let table = [];\r\n        for (const r in this.props.rounds) {\r\n            table.push(\r\n                <tr key={r}>\r\n                    <td>{this.props.rounds[r].date}</td>\r\n                    <td>{this.props.rounds[r].course}</td>\r\n                    <td>{(Number(this.props.rounds[r].strokes) + \r\n                            Number(this.props.rounds[r].minutes)) +\r\n                            \":\" + this.props.rounds[r].seconds + \" (\" + \r\n                            this.props.rounds[r].strokes + \r\n                            \" in \" + this.props.rounds[r].minutes + \":\" + \r\n                            this.props.rounds[r].seconds + \")\"}\r\n                    </td>\r\n                    <td>\r\n                        <button className=\"btn\" onClick={() => this.editRound(r)}>\r\n                            <span className=\"fa fa-edit\"></span></button>\r\n                        <button className=\"btn\"  onClick={() => this.confirmDelete(r)}>\r\n                                <span className=\"fa fa-trash\"></span></button>\r\n                    </td>\r\n                </tr> \r\n            );\r\n        }\r\n        return table;\r\n    }\r\n\r\n    editRound = (id) => {\r\n        this.props.setEditId(id);\r\n        this.props.changeMode(AppMode.EDIT_DATA);\r\n    }\r\n    \r\n    confirmDelete = (id) => {\r\n        this.props.deleteRound(id);\r\n    }\r\n\r\n    //render--render the entire rounds table with header, displaying a \"No\r\n    //Rounds Logged\" message in case the table is empty.\r\n    render() {\r\n        return(\r\n        <div className=\"padded-page\">\r\n            <h1></h1>\r\n            <table className=\"table table-hover\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th>Course</th>\r\n                        <th>Score</th>\r\n                        <th>Edit/Delete Item</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {Object.keys(this.props.rounds).length === 0 ? \r\n                    <tr>\r\n                        <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n                    </tr> : this.renderTable()\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport AppMode from '../AppMode';\r\nimport AddDataPage from './AddDataPage';\r\nimport DataTablePage from './DataTablePage';\r\nimport FloatingButton from '../components/FloatingButton';\r\n\r\nexport default class DataPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\")); \r\n        console.log(this.props.user.id);\r\n        this.state = {\r\n\t\t\trounds: data[this.props.user.id].rounds,\r\n\t\t\troundCount: data[this.props.user.id].roundCount,\r\n\t\t\tdeleteId: \"\",\r\n\t\t\teditId: \"\"\r\n\t\t};     \r\n    }\r\n\r\n    addRound = (newData) => {\r\n        console.log('ADD ROUND', newData);\r\n        let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\r\n        let newRounds = this.state.rounds;\r\n        newData.roundNum = this.state.roundCount + 1;\r\n        newRounds[this.state.roundCount + 1] = newData;\r\n        data[this.props.user.id].rounds = newRounds;\r\n        data[this.props.user.id].roundCount = this.state.roundCount + 1;\r\n        localStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\r\n        this.setState({rounds: newRounds, roundCount: newData.roundNum});\r\n        this.props.changeMode(AppMode.TABLE);\r\n    }\r\n\r\n    editRound = (newData) => {\r\n\t\tlet data = JSON.parse(localStorage.getItem(\"speedgolfUserData\")); \r\n\t\tlet newRounds = this.state.rounds;\r\n\t\tnewRounds[this.state.editId] = newData;\r\n\t\tdata[this.props.user.id].rounds = newRounds;\r\n\t\tlocalStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\r\n\t\tthis.setState({rounds: newRounds, editId: \"\"});\r\n\t\tthis.props.changeMode(AppMode.TABLE);\r\n  \t}\r\n\r\n    setEditId = (val) => {\r\n      \tthis.setState({editId: val});\r\n    }\r\n\r\n    deleteRound = (id) => {\r\n\t\tlet data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\r\n\t\tlet newRounds = this.state.rounds;\r\n\t\tdelete newRounds[id];\r\n\t\tdata[this.props.user.id].rounds = newRounds;\r\n\t\tdata[this.props.user.id].roundCount = this.state.roundCount - 1;\r\n\t\tlocalStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\r\n\t\tthis.setState({rounds: newRounds, roundCount: (this.state.roundCount - 1)});\r\n    }\r\n\r\n    render () {\r\n        switch(this.props.mode) {\r\n            case AppMode.TABLE:\r\n                return (\r\n                  <React.Fragment>\r\n                  <DataTablePage \r\n                    rounds={this.state.rounds}\r\n                    changeMode={this.props.changeMode}\r\n                    menuOpen={this.props.menuOpen}\r\n                    setEditId={this.setEditId}\r\n                    deleteRound={this.deleteRound} /> \r\n                  <FloatingButton\r\n                      handleClick={() => \r\n                        this.props.changeMode(AppMode.ADD_DATA)}\r\n                      menuOpen={this.props.menuOpen}\r\n                      icon={\"fa fa-plus\"} />\r\n                  </React.Fragment>\r\n                );\r\n            case AppMode.ADD_DATA:\r\n                return (\r\n                    <AddDataPage\r\n                      mode={this.props.mode}\r\n                      startData={\"\"} \r\n                      saveRound={this.addRound} />\r\n                );\r\n            case AppMode.EDIT_DATA:\r\n                return (\r\n                    <AddDataPage\r\n                      mode={this.props.mode}\r\n                      startData={this.state.rounds[this.state.editId]} \r\n                      saveRound={this.editRound} />\r\n                );\r\n        }\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/main.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nimport AppMode from './AppMode';\n\nimport NavBar from './components/NavBar';\nimport SideMenu from './components/SideMenu';\nimport ModeBar from './components/ModeBar';\nimport FloatingButton from './components/FloatingButton';\n\nimport LoginPage from './pages/LoginPage';\nimport AddDataPage from './pages/AddDataPage';\nimport DataPage from './pages/Data';\n\n// import RoundForm from './RoundForm';\n\nconst modeTitle = {};\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\nmodeTitle[AppMode.TABLE] = \"Data Table Page\";\nmodeTitle[AppMode.ADD_DATA] = \"Add Data Page\";\nmodeTitle[AppMode.EDIT_DATA] = \"Edit Data Page\";\n\nconst modeToPage = {};\nmodeToPage[AppMode.LOGIN] = LoginPage;\nmodeToPage[AppMode.TABLE] = DataPage;\nmodeToPage[AppMode.ADD_DATA] = DataPage;\nmodeToPage[AppMode.EDIT_DATA] = DataPage;\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {mode: AppMode.LOGIN, menuOpen: false, showAbout: false, authenticated: false, user: {}};\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"click\",this.handleClick);\n        if (!this.state.authenticated) { \n            //Use /auth/test route to re-test authentication and obtain user data\n            fetch(\"/auth/test\")\n                .then((response) => response.json())\n                .then((obj) => {\n                    if (obj.isAuthenticated) {\n                        let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\n                        if (data == null) {\n                            data = {}; //create empty database (localStorage)\n                        }\n                        if (!data.hasOwnProperty(obj.user.id)) {\n                            //create new user with this id in database (localStorage)\n                            data[obj.user.id] = {\n                                accountInfo: {\n                                    provider: obj.user.provider,\n                                    password: '',\n                                    securityQuestion: '',\n                                    securityAnswer: ''\n                                },\n                                rounds: {}, \n                                roundCount: 0\n                            };\n                            //Commit to localStorage:\n                            localStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\n                        } \n                        \n                        //Update current user\n                        this.setState({\n                            authenticated: true,\n                            user: obj.user,\n                            mode: AppMode.TABLE //We're authenticated so can get into the app.\n                        });\n                    }\n                })\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"click\",this.handleClick);\n    }\n\n    handleChangeMode = (newMode) => {\n        this.setState({mode: newMode});\n    }\n\n    setUserId = (Id) => {\n        this.setState({userId: Id});\n    }\n\n    openMenu = () => {\n        this.setState({menuOpen : true});\n    }\n        \n    closeMenu = () => {\n        this.setState({menuOpen : false});\n    }\n        \n    toggleMenuOpen = () => {\n        console.log('TOGGLE MENU');\n        console.log(this.state.menuOpen);\n        this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n        console.log(this.state.menuOpen);\n    }\n\n    handleClick = (event) => {\n        if (this.state.menuOpen) {\n            this.closeMenu();\n        }\n        event.stopPropagation();\n    }\n\n    setUser = (userObj) => {\n        this.setState({user: userObj});\n    }\n    \n    //setAuthenticated -- Given auth (true or false), update authentication state.\n    setAuthenticated = (auth) => {\n        this.setState({authenticated: auth});\n    }\n\n    toggleAbout = () => {\n        this.setState(prevState => ({showAbout: !prevState.showAbout}));\n    }\n\n    renderAbout = () => {\n        console.log('render about');\n        return (\n          <div className=\"modal\" role=\"dialog\">\n            <div className=\"modal-dialog modal-lg\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h3 className=\"modal-title\"><b>About SpeedScore</b>\n                    <button className=\"close-modal-button\" onClick={this.toggleAbout}>\n                      &times;</button>\n                  </h3>\n                </div>\n                <div className=\"modal-body\">\n                  <img\n                  src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\n                  height=\"200\" width=\"200\"/>\n                  <h3>The World's First and Only Suite of Apps for\n                  Speedgolf</h3>\n                  <p>Version CptS 489 Sp20, Build W06C2 (React)<br/>\n                  &copy; 2017-20 The Professor of Speedgolf. All rights\n                  reserved.\n                  </p>\n                  <div style={{textAlign: \"left\"}}>\n                    <p>SpeedScore apps support</p>\n                    <ul>\n                    <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\n                    <li>tracking personal speedgolf rounds and sharing results\n                    (<i>SpeedScore Track&reg;</i>)</li>\n                    <li>finding speedgolf-friendly courses, booking tee times, and\n                    paying to play speedgolf by the minute (<i>SpeedScore\n                    Play&reg;</i>)</li>\n                    </ul>\n                    <p>SpeedScore was first developed by Dr. Chris Hundhausen,\n                    associate professor of computer science at Washington State\n                    University and the <i>Professor of Speedgolf</i>, with support\n                    from Scott Dawley, CEO of Speedgolf USA, LLC. It leverages\n                    Google server-side technologies.</p>\n                    <p>For more information on SpeedScore, visit <a\n                    href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\n                    site</a>. For more information on speedgolf, visit <a\n                    href=\"http://playspeedgolf.com\"\n                    target=\"_blank\">playspeedgolf.com</a> and <a\n                    href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\n                    USA</a>.</p>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button className=\"btn btn-primary btn-color-theme\"\n                    onClick={this.toggleAbout}>OK</button>\n                  </div>\n              </div>\n            </div>\n          </div>\n        );\n    }\n\n    render() {\n        const ModePage = modeToPage[this.state.mode];\n        console.log('SHOW ABOUT', this.state.showAbout);\n        return (\n            <div onClick={this.handleClick}>\n                <NavBar title={modeTitle[this.state.mode]} mode={this.state.mode}\n                    changeMode={this.handleChangeMode}\n                    menuOpen={this.state.menuOpen}\n                    toggleMenuOpen={this.toggleMenuOpen}/>\n                <SideMenu mode={this.state.mode}\n                    menuOpen={this.state.menuOpen}\n                    changeMode={this.handleChangeMode}\n                    showAbout={this.toggleAbout}\n                    user={this.state.user}/>\n                <ModeBar mode={this.state.mode}\n                    changeMode={this.handleChangeMode}\n                    menuOpen={this.state.menuOpen}\n                    />\n                <ModePage \n                    mode={this.state.mode} \n                    menuOpen={this.state.menuOpen}\n                    changeMode={this.handleChangeMode}\n                    user={this.state.user}/>\n                {this.state.showAbout ? this.renderAbout() : null}\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}